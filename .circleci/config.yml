version: 2.1

orbs:
  python: circleci/python@1.2
  heroku: circleci/heroku@0.0.10
  browser-tools: circleci/browser-tools@1.1.3

workflows:
  flask-app-deploy-and-test:
      jobs:
        - Validate HTML templates
        - Run unit tests
        - heroku/deploy-via-git:
            requires:
              - Run unit tests
              - Validate HTML templates
            filters:
              branches:
                only: master
        - UI post-deploy test:
            requires:
              - heroku/deploy-via-git

jobs:
  Validate HTML templates:
      docker:
      - image: 18fgsa/html-proofer
      steps:
        - checkout
        - run:
            name: Run HTML proofer
            command: |
              cd src/templates
              htmlproofer --check_html --checks_to_ignore=LinkCheck	.

  Run unit tests:
      docker:
      - image: cimg/python:3.9
      steps:
        - checkout
        - python/install-packages:
            pkg-manager: pip
        - run:
            name: Run unit tests and test coverage
            command: |
              python -m coverage run --source src \
               --omit *__init__.py* \
              -m xmlrunner discover \
              -s test.unit_test -o test_reports &&
              coverage html -d coverage_reports --fail-under 80
        - store_test_results:
            path: test_reports
        - store_artifacts:
            path: coverage_reports

  UI post-deploy test:
      docker:
      - image: cimg/python:3.9-browsers
      steps:
        - checkout
        - python/install-packages:
            pkg-manager: pip
        - browser-tools/install-chrome
        - browser-tools/install-chromedriver
        - run:
            name: Check chrome install
            command: |
              google-chrome --version
              chromedriver --version
        - run:
            name: Run behave post-deploy tests
            command: |
              cd test/post_deploy_test/features
              behave -D url="https://${HEROKU_APP_NAME}.herokuapp.com/" --junit --junit-directory test_reports
        - store_test_results:
            path: test/post_deploy_test/features/test_reports
